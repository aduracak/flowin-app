rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects: users can create projects and read/write projects they're members of
    match /projects/{projectId} {
      // Allow creating projects if user is authenticated and will be the owner
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.owner;
      
      // Allow read/write if user is owner or member
      allow read, write: if request.auth != null && 
        (request.auth.uid in resource.data.members || 
         request.auth.uid == resource.data.owner);
    }
    
    // Tasks: users can read/write tasks in projects they're members of
    match /tasks/{taskId} {
      // Allow creating tasks if user is authenticated and is member/owner of the project
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(request.resource.data.projectId)) &&
        (request.auth.uid in get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.members ||
         request.auth.uid == get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.owner);
      
      // Allow read/write for existing tasks if user is member/owner
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        (request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members ||
         request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.owner);
    }
    
    // Comments: users can read/write comments on tasks they have access to
    match /comments/{commentId} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/tasks/$(resource.data.taskId));
    }
    
    // Notifications: users can read/write their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
}
